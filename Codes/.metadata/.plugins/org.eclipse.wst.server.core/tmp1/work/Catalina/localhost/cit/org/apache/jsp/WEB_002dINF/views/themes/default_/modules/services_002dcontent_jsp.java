/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.61
 * Generated at: 2015-05-09 17:18:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.themes.default_.modules;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vn.edu.cit.services.UserService;
import vn.edu.cit.model.*;
import org.springframework.data.mongodb.core.*;

public final class services_002dcontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://code.highcharts.com/stock/highstock.js\"></script>\r\n");
      out.write("<script src=\"http://code.highcharts.com/stock/modules/exporting.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var ip = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("var ramArray=[0];\r\n");
      out.write("var cpuArray=[0];\r\n");
      out.write("\r\n");
      out.write("/* JS load chart*/\r\n");
      out.write("$(function () {\r\n");
      out.write("\r\n");
      out.write("    Highcharts.setOptions({\r\n");
      out.write("        global : {\r\n");
      out.write("            useUTC : false\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Create the chart\r\n");
      out.write("    $('#cpu').highcharts({\r\n");
      out.write("        chart : {\r\n");
      out.write("        \ttype: 'spline',\r\n");
      out.write("            events : {\r\n");
      out.write("                load : function () {\r\n");
      out.write("\r\n");
      out.write("                    // set up the updating of the chart each second\r\n");
      out.write("                    var series = this.series[0];\r\n");
      out.write("                    setInterval(function () {\r\n");
      out.write("                        var x = (new Date()).getTime(), // current time\r\n");
      out.write("                            y = cpuArray[cpuArray.length-1];\r\n");
      out.write("                        series.addPoint([x, y], true, true);\r\n");
      out.write("                    }, 2000);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        xAxis: {\r\n");
      out.write("        \ttitle: {\r\n");
      out.write("                text: 'Time'\r\n");
      out.write("            },\r\n");
      out.write("        \ttype: 'datetime',\r\n");
      out.write("            tickPixelInterval: 150\r\n");
      out.write("        },\r\n");
      out.write("        yAxis: {\r\n");
      out.write("            title: {\r\n");
      out.write("                text: 'Used (%)'\r\n");
      out.write("            },\r\n");
      out.write("            plotLines: [{\r\n");
      out.write("                value: 0,\r\n");
      out.write("                width: 1,\r\n");
      out.write("                color: '#808080'\r\n");
      out.write("            }]\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        title : {\r\n");
      out.write("            text : 'CPU data'\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        exporting: {\r\n");
      out.write("            enabled: false\r\n");
      out.write("        },\r\n");
      out.write("\r\n");
      out.write("        series : [{\r\n");
      out.write("            name : '% CPU',\r\n");
      out.write("            data : (function () {\r\n");
      out.write("                // generate an array of random data\r\n");
      out.write("                var data = [], time = (new Date()).getTime(), i;\r\n");
      out.write("\r\n");
      out.write("                for (i = -19; i <= 0; i ++) {\r\n");
      out.write("                    data.push([time + i * 1000, Math.round(0)]);\r\n");
      out.write("                }\r\n");
      out.write("                return data;\r\n");
      out.write("            }())\r\n");
      out.write("        }]\r\n");
      out.write("    });\r\n");
      out.write("// draw chart for RAMs\r\n");
      out.write("      $('#ram').highcharts({\r\n");
      out.write("                chart: {\r\n");
      out.write("                    type: 'spline',\r\n");
      out.write("                    //animation: Highcharts.svg, // don't animate in old IE\r\n");
      out.write("                    marginRight: 10,\r\n");
      out.write("                    events: {\r\n");
      out.write("                        load: function () {\r\n");
      out.write("\r\n");
      out.write("                            // set up the updating of the chart each second\r\n");
      out.write("                            var series = this.series[0];\r\n");
      out.write("                            setInterval(function () {\r\n");
      out.write("                                var x = (new Date()).getTime(), // current time\r\n");
      out.write("                                    y = ramArray[ramArray.length-1]\r\n");
      out.write("                                series.addPoint([x, y], true, true);\r\n");
      out.write("                            }, 2000);\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: 'RAM data'\r\n");
      out.write("                },\r\n");
      out.write("                xAxis: {\r\n");
      out.write("                \ttitle: {\r\n");
      out.write("                        text: 'Time'\r\n");
      out.write("                    },\r\n");
      out.write("                    type: 'datetime',\r\n");
      out.write("                    tickPixelInterval: 150\r\n");
      out.write("                },\r\n");
      out.write("                yAxis: {\r\n");
      out.write("                    title: {\r\n");
      out.write("                        text: 'Used (%)'\r\n");
      out.write("                    },\r\n");
      out.write("                    plotLines: [{\r\n");
      out.write("                        value: 0,\r\n");
      out.write("                        width: 1,\r\n");
      out.write("                        color: '#808080'\r\n");
      out.write("                    }]\r\n");
      out.write("                },\r\n");
      out.write("                tooltip: {\r\n");
      out.write("                    formatter: function () {\r\n");
      out.write("                        return '<b>' +this.y +\" \"+ this.series.name + '</b><br/>' +\r\n");
      out.write("                            Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '%<br/>' +\r\n");
      out.write("                            Highcharts.numberFormat(this.y, 0);\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                legend: {\r\n");
      out.write("                    enabled: true\r\n");
      out.write("                },\r\n");
      out.write("                exporting: {\r\n");
      out.write("                    enabled: false\r\n");
      out.write("                },\r\n");
      out.write("                series: [{\r\n");
      out.write("                    name: '% RAM Used',\r\n");
      out.write("                    data: (function () {\r\n");
      out.write("                        // generate an array of random data\r\n");
      out.write("                        var data = [],\r\n");
      out.write("                            time = (new Date()).getTime(),\r\n");
      out.write("                            i;\r\n");
      out.write("\r\n");
      out.write("                        for (i = -19; i <= 0; i += 1) {\r\n");
      out.write("                            data.push({\r\n");
      out.write("                                x: time + i * 1000,\r\n");
      out.write("                                y: Math.round(0)\r\n");
      out.write("                            });\r\n");
      out.write("                        }\r\n");
      out.write("                        return data;\r\n");
      out.write("                    }())\r\n");
      out.write("                }]\r\n");
      out.write("            });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/* JS Load infomation of Server*/\r\n");
      out.write("$(document)\r\n");
      out.write(".ajaxStart(function () {\r\n");
      out.write("  $(\".wait\")\r\n");
      out.write("    .css(\"display\", \"block\");\r\n");
      out.write("});\r\n");
      out.write("//loading ServerInfomation\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/getserverinfo/' + ip + '/' + cc\r\n");
      out.write("    , type: 'GET'\r\n");
      out.write("    , data: {}, //timeout : 60000,\r\n");
      out.write("    success: function (data, status) {\r\n");
      out.write("      //if(data != null){\r\n");
      out.write("      var html = '<table class=\"table table-bordered\">';\r\n");
      out.write("      html += '<tr><td>Hostname:</td><td>' + data.hostname + '</td></tr>';\r\n");
      out.write("      html += '<tr><td>OS Version:</td><td>' + data.osversion + '</td></tr>';\r\n");
      out.write("      html += '<tr><td>Kernel:</td><td>' + data.kernel + '</td></tr>';\r\n");
      out.write("      html += '<tr><td>Processor Info:</td><td>' + data.processor_info + '</td></tr>';\r\n");
      out.write("      html += '<tr><td>Uptime:</td><td>' + data.uptime + '</td></tr>';\r\n");
      out.write("      html += '<tr><td>Memory:</td><td class=\"ram\">Loading...</td></tr>';\r\n");
      out.write("      html += '<tr><td>CPU Usage:</td><td class=\"cpu\"><span class=\"textcpu\"></span><div class=\"progress\"><div class=\"progress-bar progress-bar-green cpu-value\" style=\"width: ' + parseFloat(data.cpu_usage) +'%;\"><span class=\"cpu-value\">'+data.cpu_usage + '%</span></div></div></td></tr>';\r\n");
      out.write("      html += '<tr><td>Cpu Loadaverage:</td><td class=\"cpu-load\"><div class=\"sparkline\" data-type=\"pie\" data-offset=\"90\" data-width=\"100px\" data-height=\"100px\">' + data.cpu_loadaverage + '</div></td></tr></table>';\r\n");
      out.write("      //\talert(html);\r\n");
      out.write("      $(\".serverinfomation\")\r\n");
      out.write("        .html(html);\r\n");
      out.write("      $(\".wait\")\r\n");
      out.write("        .css(\"display\", \"none\");\r\n");
      out.write("      //}\r\n");
      out.write("      setInterval(function () {\r\n");
      out.write("    \t // getram\r\n");
      out.write("    \t  $.ajax({\r\n");
      out.write("              url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/getram/' + ip + '/' + cc\r\n");
      out.write("              , type: 'GET'\r\n");
      out.write("              , data1: {}\r\n");
      out.write("              , timeout: '10000'\r\n");
      out.write("              , error: function () {\r\n");
      out.write("            \t // $(\"td.ram\").html(\"Can not get RAM info of this server...\");\r\n");
      out.write("              }, // neu load thnh cong\r\n");
      out.write("              success: function (data1, status) {\r\n");
      out.write("               \r\n");
      out.write("               if ((data1[0] == \"null\") || (data1[0] == \"\")) {\r\n");
      out.write("            \t   if(ramArray.length>10){\r\n");
      out.write("           \t   \t\tramArray.shift();\r\n");
      out.write("           \t   \t\t}\r\n");
      out.write("               \t\tramArray.push(0);\r\n");
      out.write("            \t   //$(\"td.ram\").html(\"Can not get RAM info of this server...\");\r\n");
      out.write("                }else{\r\n");
      out.write("              \t  \tvar ramfree = parseFloat(data1[0]) / 1024;\r\n");
      out.write("                    var ramtotal = parseFloat(data1[1]) / 1024;\r\n");
      out.write("                    var ramuse = ramtotal-ramfree;\r\n");
      out.write("                    var ram = (ramuse/ramtotal)*100;\r\n");
      out.write("                    if(ramArray.length>10){\r\n");
      out.write("            \t   \t\tramArray.shift();\r\n");
      out.write("            \t   \t}\r\n");
      out.write("                \tramArray.push(parseInt(ram));\r\n");
      out.write("                   \t$(\"td.ram\").html(ram.toFixed(1)+\"% (\"+ramuse.toFixed(1)+\"/\"+ramtotal.toFixed(1)+\" MB)\");\t\r\n");
      out.write("                }\r\n");
      out.write("                }});\r\n");
      out.write("          //load CPU\r\n");
      out.write("          $.ajax({\r\n");
      out.write("              url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/getcpu/' + ip + '/' + cc\r\n");
      out.write("              , type: 'GET'\r\n");
      out.write("              , cpu: {}\r\n");
      out.write("              , async: true\r\n");
      out.write("              , timeout: '10000'\r\n");
      out.write("              , error: function () {\r\n");
      out.write("              \t // $(\"span.textcpu\").text(\"Can not get CPU info of this server...\");\r\n");
      out.write("                }\r\n");
      out.write("              , // neu load thnh cong\r\n");
      out.write("              success: function (cpu, status) {\r\n");
      out.write("                //data = $.trim(data);\r\n");
      out.write("               if ((cpu == \"null\") || (cpu == \"\")) {\r\n");
      out.write("            \t   \tif(cpuArray.length>10){\r\n");
      out.write("            \t   \t\tcpuArray.shift();\r\n");
      out.write("            \t   \t}\r\n");
      out.write("               \t\tcpuArray.push(0);\r\n");
      out.write("                }else{\r\n");
      out.write("                \tif(cpuArray.length>10){\r\n");
      out.write("            \t   \t\tcpuArray.shift();\r\n");
      out.write("            \t   \t}\r\n");
      out.write("                \tcpuArray.push(parseInt(cpu));\r\n");
      out.write("                \t$(\"span.textcpu\").text(\"\");\r\n");
      out.write("                \t$(\"span.cpu-value\").removeClass(\"hidden\");\r\n");
      out.write("                \t$(\"span.cpu-value\").css(\"width\", parseFloat(cpu).toFixed(1)+\"%\");\r\n");
      out.write("              \t  \t$(\"span.cpu-value\").text(parseFloat(cpu).toFixed(1)+\"%\");\r\n");
      out.write("                }}});\r\n");
      out.write("      },2000); //10s\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("\t//end set time load\r\n");
      out.write("\t\r\n");
      out.write("  $(\"#m-status\")\r\n");
      out.write("    .on(\"click\", function () {\r\n");
      out.write("      //var id=\"\"\r\n");
      out.write("      if ($(this)\r\n");
      out.write("        .is(\":checked\")) {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/monitor/start/' + ip + '/' + cc\r\n");
      out.write("          , type: 'GET'\r\n");
      out.write("          , datastatus: {}\r\n");
      out.write("        })\r\n");
      out.write("      } else {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/monitor/stop/' + ip + '/' + cc\r\n");
      out.write("          , type: 'GET'\r\n");
      out.write("          , datastatus: {}\r\n");
      out.write("        })\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  $(\".active-sudo\")\r\n");
      out.write("    .on(\"click\", function () {\r\n");
      out.write("      var user = $(\".username\")\r\n");
      out.write("        .val();\r\n");
      out.write("      var pass = $(\".password\")\r\n");
      out.write("        .val();\r\n");
      out.write("      $.ajax({\r\n");
      out.write("        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/serviceconfig/user/' + user + '/' + pass + '/' + ip + '/' + cc\r\n");
      out.write("        , type: 'GET'\r\n");
      out.write("        , datastatus: {}\r\n");
      out.write("        , success: function (datastatus, status) {\r\n");
      out.write("          location.reload();\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<aside class=\"right-side\">\r\n");
      out.write("\t<!-- Content Header (Page header) -->\r\n");
      out.write("\t<section class=\"content-header\">\r\n");
      out.write("\t\t<h1>\r\n");
      out.write("\t\t\tControl Services Server<small> (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(")</small>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!--  End Content Header -->\r\n");
      out.write("\t<!--  Main Content -->\r\n");
      out.write("\t<section class=\"content\">\r\n");
      out.write("\t\t<div class=\"main-content panel-group\" id=\"accordion\">\r\n");
      out.write("\t\t\t<ul class=\"nav nav-tabs\" id=\"serverTab\">\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a data-toggle=\"tab\" href=\"#monitor\">System\r\n");
      out.write("\t\t\t\t\t\tInfomation</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#services\">Service Configuation</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t\t\t<div class=\"tab-content\">\r\n");
      out.write("\t\t\t\t<div style=\"display: none ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${display}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" id=\"login-alert\"\r\n");
      out.write("\t\t\t\t\tclass=\"alert alert-danger col-sm-12\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</div>\r\n");
      out.write("\t\t\t\t<div style=\"display: none ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${displaysuccess}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" id=\"login-alert\"\r\n");
      out.write("\t\t\t\t\tclass=\"alert alert-success col-sm-12\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Tabs Monitor Config -->\r\n");
      out.write("\t\t\t\t<div class=\"tab-pane active\" id=\"monitor\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3 class=\"panel-title\">System Infomation</h3>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"serverinfomation\" class=\"serverinfomation\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"wait\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"display: none: text-align:center; displar: block; margin:10px 50%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsrc=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</span>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- // Panel Body -->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
      out.write("\t\t\t\t\t\t\t<h3 class=\"panel-title\">Monitoring</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"monitoring\" class=\"monitoring panel-collapse \">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"box box-default\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"box-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<h3 class=\"box-title\">CPU Usage</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"box-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"box-body text-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div id=\"cpu\" style=\"height: 400px; min-width: 310px\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- /.box-body -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"box box-default\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"box-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<h3 class=\"box-title\">RAM</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"box-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"box-body text-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div id=\"ram\" style=\"height: 400px; min-width: 310px\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- /.box-body -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- // Panel Body -->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- Tabs Service Config -->\r\n");
      out.write("\t\t\t\t<div class=\"tab-pane\" id=\"services\">\r\n");
      out.write("\t\t\t\t\t");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/themes/default/modules/services-content.jsp(364,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest((session.getAttribute("sudouser") == null));
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t<div class=\"box box-default\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"box-header\">\r\n");
          out.write("\t\t\t\t\t\t\t\tPlease input your server SUDOER user, it will not save!\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"box-body\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<form\r\n");
          out.write("\t\t\t\t\t\t\t\t\taction=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/user/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\tclass=\"form-horizontal\" method=\"POST\">\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group \">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-control username\" name=\"newuser\" type=\"text\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Sudoer Username\" />\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group \">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-control password\" name=\"newpassword\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\" placeholder=\"Sudoer Password\" />\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary active-sudo\">OK</button>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t</form>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/themes/default/modules/services-content.jsp(394,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest((session.getAttribute("sudouser") != null));
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t<!-- Power -->\r\n");
          out.write("\t\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<h3 class=\"panel-title\">Power Control</h3>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-body\">\r\n");
          out.write("\t\t\t\t\t\t\t<center>\r\n");
          out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-danger \"\r\n");
          out.write("\t\t\t\t\t\t\t\t\tonclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/services/shutdown/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("'\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\ttitle=\"Stop Server\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-off\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t</button>\r\n");
          out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-lg btn-warning\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\tonclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/services/restart/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("'\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\ttitle=\"ReBoot Server\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-repeat\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t</button>\r\n");
          out.write("\t\t\t\t\t\t\t\t</center>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t<!-- Network Card -->\r\n");
          out.write("\t\t\t\t\t\t<div class=\"panel panel-default\" id=\"network-card\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<h3 class=\"panel-title\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<a href=\"#network-card\" data-toggle=\"collapse\" data-target=\"#network-card-config\">Network\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tConfiguration <i class=\"glyphicon glyphicon-chevron-down pull-right\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t</h3>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t<div id=\"network-card-config\" class=\"panel-collapse collapse\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"panel-body\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<a class=\"col-md-4\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/nic/interfaces/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tNetwork Interfaces </a> <a class=\"col-md-4\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/nic/nameservers/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tDNS NameServers... </a> <a class=\"col-md-4\"\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/nic/edit-file-nic/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tEdit Config File... </a>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t<!-- FTP Service -->\r\n");
          out.write("\t\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<h3 class=\"panel-title\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<a\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/ftp/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">FTP\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tServer Configuration <i\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-chevron-right pull-right\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t</h3>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t<!-- SSH Service -->\r\n");
          out.write("\t\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<h3 class=\"panel-title\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<a\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/ssh/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">SSH\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tServer Configuration <i\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-chevron-right pull-right\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t</h3>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t<!-- DHCP Service -->\r\n");
          out.write("\t\t\t\t\t\t<div class=\"panel panel-default\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"panel-heading\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<h3 class=\"panel-title\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<a\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("/serviceconfig/dhcp/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server.serverAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write('/');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\">DHCP\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tServer Configuration <i\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-chevron-right pull-right\"></i>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t</h3>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("<!-- \t\t\t\t\t\tDNS Bind 9 -->\r\n");
          out.write("<!-- \t\t\t\t\t\t<div class=\"panel panel-default disabled\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t<div class=\"panel-heading\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t<h3 class=\"panel-title\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t<a -->\r\n");
          out.write("\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\thref=\"#\" -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\tonclick=\"return alert('Under Construction');\">DNS Bind9 Server -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\tConfiguration <i class=\"glyphicon glyphicon-chevron-down pull-right\"></i> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t</a> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t</h3> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t</div> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t</div> -->\r\n");
          out.write("<!-- \t\t\t\t\t\tApache Service -->\r\n");
          out.write("<!-- \t\t\t\t\t\t<div class=\"panel panel-default disabled\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t<div class=\"panel-heading\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t<h3 class=\"panel-title\"> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t<a -->\r\n");
          out.write("\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\thref=\"#\" -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\tonclick=\"return alert('Under Construction');\">Apache Server -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t\tConfiguration <i class=\"glyphicon glyphicon-chevron-down pull-right\"></i> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t\t</a> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t\t</h3> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t\t</div> -->\r\n");
          out.write("<!-- \t\t\t\t\t\t</div> -->\r\n");
          out.write("\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- End Service -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!--  End Main Content -->\r\n");
      out.write("</aside>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/themes/default/modules/services-content.jsp(316,15) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/themes/default/images/loading.gif");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }
}

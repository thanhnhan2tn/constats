package vn.edu.cit.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import vn.edu.cit.dao.UserDAO;
import vn.edu.cit.model.Server;
import vn.edu.cit.model.User;
import vn.edu.cit.servercontrol.nic.Eth;
import vn.edu.cit.servercontrol.nic.Nic;
import vn.edu.cit.servercontrol.nic.NicConfig;

@Controller
public class NICController {
	@Autowired
	private UserDAO userDAO;

	@RequestMapping(value = "/serviceconfig/nic/{ip}/{cc}", method = RequestMethod.GET)
	public String service(HttpServletRequest request, HttpSession session, @PathVariable(value = "ip") String ip,
			@PathVariable(value = "cc") String c, ModelMap mm) throws IOException {
		String username = (String) session.getAttribute("username");
		String cc = (String) session.getAttribute("cc");
		// Lay doi tuong server trong CSDL
		User user = userDAO.getUser(username);
		// Khoi tao doi tuong Server
		Server sv = new Server();
		// Xet user dang nhap va token
		if (user != null && c.equals(cc)) {
			// duyet danh sach server cua user
			for (Server server : user.getServers()) {
				if (server.getServerAddress().equals(ip)) {
					sv = server;
					break;
				}
			}

			NicConfig nicConfig = new NicConfig();
			Nic nic = nicConfig.convertXMLToObject(sv);
			mm.put("cc", c);
			mm.put("title", "Home - Server Control");
			mm.put("user", user);
			mm.put("nics", nic);
			mm.put("server", sv);
			Nic nicForm = new Nic(); // put a nic object to form
			nicForm.setEth(nic.getEth()); // truyen vao nicForm danh sach cac
											// eth
			mm.put("nicForm", nicForm);
			return "nic-config";
		} else {
			// Neu user khong co trong session hoac token sai
			session.invalidate();
			return "redirect:/login";
		}
	}

	@RequestMapping(value = "/serviceconfig/nic/{action}/{ip}/{if}/{cc}", method = RequestMethod.GET)
	public String controlNIC(HttpServletRequest request, HttpSession session,
			@PathVariable(value = "action") String action, @PathVariable(value = "ip") String ip,
			@PathVariable(value = "if") String iface, @PathVariable(value = "cc") String c, ModelMap mm) {
		if (action.equals("stop")) {
			System.out.println("Stop : " + ip + ",iface: " + iface);
		} else if (action.equals("start")) {
			System.out.println("Start : " + ip + ",iface: " + iface);
		} else if (action.equals("restart")) {
			System.out.println("Restart : " + ip + ",iface: " + iface);
		} else {
			return "redirect:/serviceconfig/nic/" + ip + "/" + c;
		}
		return "redirect:/serviceconfig/nic/" + ip + "/" + c;
	}

	@RequestMapping(value = "/serviceconfig/nic/{ip}/save/{cc}", method = RequestMethod.POST)
	public String saveNIC(@ModelAttribute(value = "nicForm") Nic nic, HttpServletRequest request, HttpSession session,
			@PathVariable(value = "ip") String ip, @PathVariable(value = "cc") String c) {
		System.out.println(nic);
		System.out.println(nic.getEth()t);
		
		String cc = (String) session.getAttribute("cc");
		String username = (String) session.getAttribute("username");
		User user = userDAO.getUser(username);
		if (user != null) { // check user login
			if (c.equals(cc)) {
				System.out.println("check1");
				List<Eth> eths = nic.getEth();
				System.out.println(eths);
				System.out.println(eths.size());
				if (eths != null && eths.size() > 0) {
					System.out.println("check2");
					for (Eth eth : eths) {
						System.out.println("Thanh cong: " + eth.getAddress());
					}
				}
			} else {
				session.invalidate();
				return "redirect:/login";
			} // end check token
		} // end check user
		return "redirect:/serviceconfig/nic/" + ip + "/" + cc;
	}
}

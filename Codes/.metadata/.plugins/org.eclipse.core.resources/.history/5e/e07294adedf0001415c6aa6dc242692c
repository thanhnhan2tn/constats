import java.io.InputStream;

import model.server.Server;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.Session;

public class MonitorTest {
	// Upload cmd / file to server
	public boolean sendCommandToServer(Server sv, String cmd) {
		Session ss = sv.getSession(sv);
		try {
			// option -e giup nhan dang ki tu xuong dong
			Channel channel = ss.openChannel("exec");
			((ChannelExec) channel).setCommand(cmd);
			((ChannelExec) channel).setErrStream(System.err);

			InputStream in = channel.getInputStream();
			channel.connect();
			byte[] tmp = new byte[1024];
			while (true) {
				while (in.available() > 0) {
					int i = in.read(tmp, 0, 1024);
					if (i < 0)
						break;
					System.out.print(new String(tmp, 0, i));
				}
				if (channel.isClosed()) {
					System.out.println("exit-status: "
							+ channel.getExitStatus());

					break;
				}
				try {
					Thread.sleep(1000);
				} catch (Exception ee) {
				}
			}
			channel.disconnect();
			if (channel.getExitStatus() == 0) {

				return true;
			} else {
				return false;
			}
		} catch (Exception e) {
			return false;
		}
	}

	// Start Monitor service
	public Boolean startMonitor(Server sv) {
		String cmd = "echo " + sv.getServerPassword() + " |sudo -S "
				+ "/etc/init.d/monitor-script.sh start";// exit status =-1 nghia
														// la thanh cong

		return sendCommandToServer(sv, cmd);
	}

	// Stop Monitor service
	public Boolean stopMonitor(Server sv) {
		String cmd = "echo " + sv.getServerPassword() + " |sudo -S "
				+ "/etc/init.d/monitor-script.sh stop";// exit status =-1 nghia
														// la thanh cong

		return sendCommandToServer(sv, cmd);
	}

	// Start Monitor service
	public Boolean restartMonitor(Server sv) {
		stopMonitor(sv);
		return startMonitor(sv);

	}

	public static void main(String[] args) {
		Server sv = new Server("192.168.0.116", 22, "mayb", "mayb", "mayb");
		MonitorTest mtest = new MonitorTest();
		// mtest.startMonitor(sv);
		// mtest.stopMonitor(sv);
		mtest.restartMonitor(sv);
	}

}

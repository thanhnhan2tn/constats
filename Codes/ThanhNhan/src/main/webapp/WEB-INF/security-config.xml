<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Enable the method security to use the @PreAuthorize, @PreFilter, @PostAuthorize 
		and @PostFilter annotations in methods and secure it. -->
	<global-method-security pre-post-annotations="enabled" />

	<!-- secure the applicationÂ´s urls with the specific Role -->
	<http auto-config="false" use-expressions="true"
		access-denied-page="/404">

		<form-login login-processing-url="/login" login-page="/"
			username-parameter="email" password-parameter="password"
			default-target-url="/login-success" authentication-failure-url="/login-error" />
		<logout logout-url="/logout" logout-success-url="/logout-success" />
		<session-management>
			<concurrency-control expired-url="/login" />
		</session-management>
	</http>
	
	<!-- Define the application authentication manager to use a custom Class 
		(mongoUserDetailsService) to validate the user access, and the password enconding -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="mongoUserDetailsService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>


</beans:beans>